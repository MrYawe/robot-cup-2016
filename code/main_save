/**
 *	AC : right left motors
 * 	B : collector motor
 *  sudo nbc main.nxc -O=main.rxe
 * 	sudo t2n -put main.rxe
 */

// Sensors
#define S_COLLISION1 IN_1
#define S_COLLISION2 IN_2
#define S_COLOR IN_3
#define S_ULTRASONIC IN_4

// Constants
#define NEAR 30 //cm
#define SPEED 100
#define MIN_BORDERLINE_COLOR 45
#define VOLUME 3

// Global variables
mutex moveMutex;

task move_auto()
{
	SetSensorLowspeed(S_ULTRASONIC);
	while(true) 
	{
		//Acquire(moveMutex);
			OnRev(OUT_AC, SPEED);
			while(SensorUS(S_ULTRASONIC)>NEAR); // ultrasonic detection
			Off(OUT_AC);
			PlayToneEx(262,1600,VOLUME,FALSE);
			OnRev(OUT_C,100); //old
			OnFwd(OUT_A,100);
			Wait(950);
		//Release(moveMutex);
	}
}

task run_collector()
{
	while (true)
	{
		OnRev(OUT_B, 75);
	}
}

task check_collision()
{
	SetSensorTouch(IN_1);
	SetSensorTouch(IN_2);
	while (true)
	{
		if (SENSOR_1 == 1 || SENSOR_2 == 1)
		{
			Acquire(moveMutex);
				PlayToneEx(262,1600,VOLUME,FALSE);
				OnFwd(OUT_AC, 75); // marche arriere 
				Wait(950);
				OnFwd(OUT_A,100); // pivot
				OnRev(OUT_C,100); 
				Wait(950);
				Off(OUT_AC);
				OnRev(OUT_AC, SPEED);
			Release(moveMutex);
		}
	}
}

task check_boderline()
{
	SetSensorLight(S_COLOR);
	while (true)
	{
		if(Sensor(S_COLOR) >= MIN_BORDERLINE_COLOR)
		{
			Acquire(moveMutex);
				PlayToneEx(262,1600,VOLUME,FALSE);
				OnFwd(OUT_AC, 75); // marche arriere 
				Wait(950);
				OnFwd(OUT_A,100); // pivot
				OnRev(OUT_C,100); 
				Wait(950);
				Off(OUT_AC);
				OnRev(OUT_AC, SPEED);
			Release(moveMutex);
		}
	}
}


task main()
{
	Precedes(move_auto, run_collector, check_boderline, check_collision);
}